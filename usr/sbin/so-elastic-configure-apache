#!/bin/bash
#
# Copyright 2014,2015,2016,2017,2018,2019,2020 Security Onion Solutions, LLC
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

. /usr/sbin/so-elastic-common

header "Configuring Apache"

# Is Elastic auth enabled?
if [ -f /etc/elasticsearch/elasticsearch_accounts ]; then
	# If Elastic auth is enabled, copy the simple apache config into place
	cp -av $SRC/etc/apache2/sites-available/securityonion-elastic-auth.conf /etc/apache2/sites-available/securityonion.conf
else
	# Otherwise, copy the full SSO config into place
	cp -av $SRC/etc/apache2/sites-available/securityonion.conf /etc/apache2/sites-available/securityonion.conf
fi

# Enable necessary Apache2 modules
if ! [ -f /etc/apache2/mods-enabled/auth_form.load ]; then
	a2enmod auth_form
fi

if ! [ -f /etc/apache2/mods-enabled/request.load ]; then
	a2enmod request
fi

if ! [ -f /etc/apache2/mods-enabled/session_cookie.load ]; then
	a2enmod session_cookie
fi

if ! [ -f /etc/apache2/mods-enabled/session_crypto.load ]; then
	a2enmod session_crypto
fi

FILE="/etc/apache2/session"
LC_ALL=C </dev/urandom tr -dc '[:alnum:]' | head -c 64 >> $FILE
chown www-data:www-data $FILE
chmod 660 $FILE

FILE="/etc/ssl/certs/securityonion.pem"
if [ ! -f $FILE ]; then
	echo "Creating $FILE..."
	ln -s ssl-cert-snakeoil.pem $FILE
fi

FILE="/etc/ssl/private/securityonion.key"
if [ ! -f $FILE ]; then
	echo "Creating $FILE..."
	ln -s ssl-cert-snakeoil.key $FILE
fi

# Disable ELSA site and perl module
a2dissite elsa >/dev/null 2>&1
a2dismod  perl >/dev/null 2>&1

# If mysqld is running, update links in Squert
if pgrep mysqld >/dev/null 2>&1; then
	# Remove ELSA link from Squert
	mysql --defaults-file=/etc/mysql/debian.cnf -Dsecurityonion_db -e 'delete from filters where alias="ELSA";'

	# Add Elastic link to Squert
	MYSQL="mysql --defaults-file=/etc/mysql/debian.cnf -Dsecurityonion_db -e"
	ALIAS="Kibana"
	HEXALIAS=$(xxd -pu -c 256 <<< "$ALIAS")
	URL="/app/kibana#/dashboard/68563ed0-34bf-11e7-9b32-bb903919ead9?_g=(refreshInterval:(display:Off,pause:!f,value:0),time:(from:now-24h,mode:quick,to:now))&_a=(columns:!(_source),index:'*:logstash-*',interval:auto,query:(query_string:(analyze_wildcard:!t,query:'\"\${var}\"')),sort:!('@timestamp',desc))"
	HEXURL=$(xxd -pu -c 356 <<< "$URL")
	$MYSQL "REPLACE INTO filters (type,username,global,name,notes,alias,filter) VALUES ('url','','1','$HEXALIAS','','$ALIAS','$HEXURL');"
fi

# If Apache is currently running, restart it
if pgrep apache2 >/dev/null 2>&1; then
	service apache2 restart
fi

echo "Done!"
