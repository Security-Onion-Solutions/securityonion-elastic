#!/bin/bash
#
# Copyright 2014,2015,2016,2017,2018,2019,2020 Security Onion Solutions, LLC
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

. /usr/sbin/so-elastic-common
. /etc/nsm/elasticdownload.conf

function download {
	header "Adding Docker repo"
	cp $SRC/etc/apt/preferences.d/securityonion-docker /etc/apt/preferences.d/
	apt-get -y install apt-transport-https ca-certificates curl > /dev/null
	curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
	add-apt-repository        "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
	       $(lsb_release -cs) \
	       stable"
	echo "Done!"

	header "Updating package list"
	apt-get update > /dev/null
	echo "Done!"

	header "Installing Docker"
	# Check to see if docker-ce is installed
	if [ $(dpkg -l | grep -q docker-ce) ]; then
		:
	else
		apt-get -y install docker-ce > /dev/null
	fi
	echo "Done!"

	header "Enabling DOCKER_CONTENT_TRUST"
	echo "export DOCKER_CONTENT_TRUST=1" >> /etc/profile.d/securityonion-docker.sh
	export DOCKER_CONTENT_TRUST=1
	echo "Done!"

	header "Downloading Docker containers"
	for i in so-elasticsearch so-kibana so-logstash so-elastalert so-curator so-freqserver so-domainstats; do
		docker pull --disable-content-trust=false $DOCKERHUB/$i
	done
	echo "Done!"

	header "Installing new packages"
	for i in securityonion-samples-bro libapache2-mod-authnz-external redis-server; do
		if dpkg -l | grep -q $i; then
		:
		else
		echo $i
		apt-get install -y $i > /dev/null
		fi
	done
	echo "Done!"

	# redis-server starts automatically upon installation
	service redis-server stop > /dev/null 2>&1
	update-rc.d -f redis-server disable > /dev/null 2>&1

	header "Updating existing packages"
	# Need to ensure we're running the latest versions of these packages
	# so don't just check to see if they've already been installed, force the update
	apt-get install -y securityonion-setup securityonion-sostat securityonion-ossec-rules securityonion-sguil-client securityonion-sguil-sensor securityonion-sguil-server
	echo "Done!"
}

# Check if already installed
[ "$INSTALLED" == "yes" ] && echo "Already downloaded/installed!" && exit 0

# Download components
download

# Check if successful
if dpkg -l |grep redis >/dev/null 2>&1 && dpkg -l |grep docker >/dev/null 2>&1 ; then
	ELASTIC_DL_CONF="/etc/nsm/elasticdownload.conf"
	if grep 'INSTALLED="yes"' $ELASTIC_DL_CONF; then
		:
	else
		echo 'INSTALLED="yes"' >> $ELASTIC_DL_CONF
	fi
fi
